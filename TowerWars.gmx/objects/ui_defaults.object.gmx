<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_ui</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Copyright (c) 2013 NailBuster Software Inc.  all rights reserved.
/**********************

  This source code is provided 'as-is', without any express or implied warranty. 
  In no event will NailBuster Software Inc. be held liable for any damages arising from the use of this software.

      Permission is granted to use these components for non commercial applications, and to alter it for your needs,
    subject to the following restrictions:
    
  1. The origin of this software must not be misrepresented; you must not claim that you wrote the original source code 
     or components. If you use this software in a application, an acknowledgment in the product about/documentation would be appreciated but is not required.
  2. Altered source versions must be plainly marked as such, and must not be misrepresented as being the original software.
     You cannot distribute your modified sources of our component suite outside of your company.
  3. You cannot use this source or components in a tool or package designed to compete with NailBuster GUI component Suite. 
     For example,  you cannot modify and/or  improve these components and release under another component suite name.
  4. You cannot redistribute these source files outside of your compiled projects. All original Sources Files/Documentation 
     must originate from NailBuster Software Inc.  You cannot host or redistribute these source files. 
  
  If your application is used for commercial purposes, and will generate revenue directly or indirectly then you are required to 
  purchase a commercial license from NailBuster Software Inc.  Please visit www.nailbuster.com for purchasing information.
  If you have any questions about the license please contact us at david@nailbuster.com

**********************/

uiTextValue="";
uiTextLabel="";
uiBackColor= c_white;
uiDrawBackColor = true;
uiTextColor= c_black;
uiDrawOutline = false;   //fill button when drawing.
uiBorderColor=c_white;
uiBorderBackColor=c_gray;
uiHiliteColor=c_white;
uiHiliteBackColor=c_blue;
uiHiliteBackColor2=c_navy;
uiAlign = fa_left;
uiAlignV = fa_top;
uiFont = font_ui;
uiXscale = 1.0;
uiYscale = 1.0;
uiButtonList = false;  //if set then control is a button list and will send button to eventobj
uiShowArrows = false;
uiEventObject = noone;  //-4 constant
uiEventNum = 0;    //default event is just to call the statechanged on controller object if set
uiControlName = '';
uiMultiSelect = false;
uiAnchor = noone;
uiMoveX=0;
uiMoveY=0;
uiAniMove=false;  //start moving
uiAniX=0;    //don't change
uiAniY=0;    //don't change
uiAniSpeed=0.85;
checked = false;  //default state of checkbox;
modified = false;
inForm=false;
uiDrawSelf=false;
uiPasswordChar='';    //should not change this as default.
uitextboxmsg = -1;    //should not be changed....used for dialon on textboxes.
uiFadeIn=false;
uiFadeOut=false;
uiFadeSpeed=0.8;
uiAlpha=1;
uiImageBlend=c_white;
uiOrigXscale=image_xscale;
uiOrigYscale=image_yscale;
uiOrigWidth=sprite_width;
uiOrigHeight=sprite_height;
uiMouseHandle=true;   //if item overlap then we only process on one control.
uiRefresh=false;      //this will cause all comboboxes to close for now....
uiFocusID=noone;         //instance that has focus used on refresh;
uiZoomIn=false;
uiZoomOut=false;
uiZoomSpeed=0.5;
uiZoomFactor=1;
uiEnabled=true;
uiVisible=true;





//v1.01 added 
//animate stuffs
uiAnimated=false;
uiWobble=0;
uiWobbleSpeed=1;
uiPulse=0;
uiPulseSpeed=0.01;
uiFading=0;
uiFadingSpeed=0.03;
uiSparkle=0;
uiSparkleSpeed=1;
uiTextWobble=0;
uiTextWobbleSpeed=1;
uiHoverMode=1;
uiHoverColor=c_dkgray;
uiHoverInfo=0.8;
uiGlowing=0;



draw_set_circle_precision(32);



//v1.2 added
uiAnchorProps=true;   //used to determin if enabled/visible are set for children.



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if inForm==false exit;

//if we click anywhere on room that isn't a ui_component then we refresh all active objects when inForm==true;

var inst;

inst=instance_position(mouse_x, mouse_y, ui_defaults);
if inst=noone {
    with (ui_defaults) do 
                 {
                  uiFocusID=noone; //will set the focus object.
                  uiRefresh=true;   //will refersh all ui (close comboboxes for example)...
                 } 
              }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if inForm==false exit;


var curID;
curID=self.id;

with (ui_defaults)
{
uiFocusID=curID;                      //will set the focus object.
uiRefresh=true;   //will refersh all ui (close comboboxes for example)...
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Copyright (c) 2013 NailBuster Software Inc.  all rights reserved.
/**********************

  This source code is provided 'as-is', without any express or implied warranty. 
  In no event will NailBuster Software Inc. be held liable for any damages arising from the use of this software.

      Permission is granted to use these components for non commercial applications, and to alter it for your needs,
    subject to the following restrictions:
    
  1. The origin of this software must not be misrepresented; you must not claim that you wrote the original source code 
     or components. If you use this software in a application, an acknowledgment in the product about/documentation would be appreciated but is not required.
  2. Altered source versions must be plainly marked as such, and must not be misrepresented as being the original software.
     You cannot distribute your modified sources of our component suite outside of your company.
  3. You cannot use this source or components in a tool or package designed to compete with NailBuster GUI component Suite. 
     For example,  you cannot modify and/or  improve these components and release under another component suite name.
  4. You cannot redistribute these source files outside of your compiled projects. All original Sources Files/Documentation 
     must originate from NailBuster Software Inc.  You cannot host or redistribute these source files. 
  
  If your application is used for commercial purposes, and will generate revenue directly or indirectly then you are required to 
  purchase a commercial license from NailBuster Software Inc.  Please visit www.nailbuster.com for purchasing information.
  If you have any questions about the license please contact us at david@nailbuster.com

**********************/

if (uiAniMove) { uiAniX= uiMoveX- x;
                 uiAniY= uiMoveY- y;
                 uiAniMove=false;
               }   
   
              
               
if uiFadeIn 
     {                                                    //fadein
       if uiAlpha &lt;=1
            {  uiAlpha=uiAlpha+(0.1 * uiFadeSpeed);
               uiVisible=true;
               if uiAlpha &gt;0.98 then {     uiAlpha=1;
                                           uiFadeIn=false;
                                     } 
            } 
     }          

if (uiFadeOut &amp;&amp; uiFadeIn==false)
   {  if uiAlpha &gt;=0
            {  uiAlpha=uiAlpha - (0.1 * uiFadeSpeed);
               if uiAlpha &lt;0.02 then {      uiAlpha=0;
                                            uiFadeOut=false;
                                            uiVisible=false;
                                     } 
               
            } 
   }         
   
 
       
if (uiEnabled==false) || (uiMouseHandle==false) {draw_set_alpha(0.5);} 
     else draw_set_alpha(uiAlpha);  
            
if (uiAniX != 0) 
      {  
         x = floor(uiMoveX- uiAniX);
         uiAniX = uiAniX * uiAniSpeed;      
         if (abs(uiAniX)&lt;1 || x==uiMoveX)
                   {uiAniX=0;
                    x=uiMoveX;
                   } 
      }

if (uiAniY != 0) 
      {  
         y =floor(uiMoveY- uiAniY);
         uiAniY = uiAniY * uiAniSpeed;      
         if (abs(uiAniY)&lt;1  || y==uiMoveY) 
                          {uiAniY=0;
                           y=uiMoveY;
                          } 
      }  
        
if uiZoomOut
   if uiZoomFactor != 0.1
          {  uiZoomFactor= uiZoomFactor * uiZoomSpeed;   
             if uiZoomFactor &lt;= 0.1  {
                                      uiZoomOut=false;               
                                      uiZoomFactor=0.1;
                                     }        
          }    
          
if uiZoomIn
   if uiZoomFactor &lt;= 1
          {  uiZoomFactor= uiZoomFactor * (1/uiZoomSpeed);   
             if uiZoomFactor &gt;= 1    {                       //reset to zoom 1
                                      uiZoomIn=false;               
                                      uiZoomFactor=1;
                                      image_xscale = uiOrigXscale * (uiZoomFactor);
                                      image_yscale = uiOrigYscale * (uiZoomFactor);
                                     }        
          }        
      

if (uiAnchor != noone)
   {  x = xstart + ( (uiAnchor).x - (uiAnchor).xstart );
      y = ystart + ( (uiAnchor).y - (uiAnchor).ystart );   
      uiAlpha=uiAnchor.uiAlpha;   //set alpha for fadein/out effect   
      uiZoomFactor=uiAnchor.uiZoomFactor;  //sets same zoomout/in
     if uiAnchorProps     //sets childrens enabled/visible by default.
        { uiEnabled=uiAnchor.uiEnabled;
          uiVisible=uiAnchor.uiVisible;
        }  
   }
   
  
          
if uiZoomFactor != 1
   {
      image_xscale = uiOrigXscale * (uiZoomFactor);
      image_yscale = uiOrigYscale * (uiZoomFactor);
   }   
                
   
                       
         
   
if uiDrawSelf then { image_uiXscale=1;
                     image_uiYscale=1; 
                     draw_self();   //allow gms sprites and code as well....     
                   }  
   
   
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
